package com.example.FileUploadDownload;

import org.springframework.core.io.Resource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.client.HttpServerErrorException.InternalServerError;
import org.springframework.web.multipart.MultipartFile;

import com.example.FileUploadDownload.upload.FileUploadUtils;
import com.example.FileUploadDownload.upload.FileUploadeResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.IOException;
import java.nio.file.Paths;

@RestController
@RequestMapping("/api/upload")
public class FileUploadController {

    @PostMapping
    public ResponseEntity<FileUploadeResponse> uploadFile(
            @RequestParam("file") MultipartFile multipartFile) {
        String fileName = StringUtils.cleanPath(multipartFile.getOriginalFilename());
		long size = multipartFile.getSize();
		FileUploadUtils.saveFile(fileName, multipartFile);

		FileUploadeResponse response = new FileUploadeResponse();
		response.setFilename(fileName);
		response.setSize(size);
		response.setDownloadURL("/download" + fileName); // Assuming you have a download endpoint

		return new ResponseEntity<>(response, HttpStatus.OK);
    }
    
    
    @GetMapping("/download/{fileCode}")
    public ResponseEntity<?> downloadFile(@PathVariable("fileCode") String fileCode){
    	FileUploadUtils downloadUtils= new FileUploadUtils();
    	Resource resource=null;
    	try {
			resource=downloadUtils.getFileAsResource(fileCode);
		} catch (Exception e) {
			return ResponseEntity.InternalServerError().build();
		}
    	if(resource==null) {
    		return new ResponseEntity<>("File not Found",HttpStatus.NOT_FOUND);
    	}
    	
    	String contentType ="application/octet-stream";
    	String headerValue="attachment;filename=\""+resource.getFilename()+"\"";
    	return ResponseEntity.ok()
    			.contentType(MediaType.parseMediaType(contentType))
    			.header(HttpHeaders.CONTENT_DISPOSITION, headerValue).body(resource);
    ;
    }
}